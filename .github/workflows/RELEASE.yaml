on:
  push:
    branches:
      - master
    tags:
    - 'v*'

name: Upload Release Asset

jobs:
  packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [{ 'os': 'darwin', 'target': 'amd64'}, { 'os': 'linux', 'target': 'amd64'}, { 'os': 'linux', 'target': '386'}]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.15.3'

    - name: Install dependencies
      run: go version

    - name: Create asset
      run: |
        GOOS=${{ matrix.target.os }} GOARCH=${{ matrix.target.arch }} go build -o syncher
        zip -j -r syncher_${{ matrix.target.os }}_${{ matrix.target.os }}.zip syncher

  release:
    runs-on: ubuntu-latest
    needs: packages

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  upload:
    runs-on: ubuntu-latest
    needs: [packages, release]
    strategy:
      matrix:
        target: [{ 'os': 'darwin', 'target': 'amd64'}, { 'os': 'linux', 'target': 'amd64'}, { 'os': 'linux', 'target': '386'}]

    steps:
    - name: Upload Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./syncher_${{ matrix.target.os }}_${{ matrix.target.arch }}.zip
        asset_name: syncher_${{ matrix.target.os }}_${{ matrix.target.arch }}.zip
        asset_content_type: application/zip

